{"ast":null,"code":"var _jsxFileName = \"/home/ruda/Documents/projeto_08_zaprecall/src/components/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Flashcard from \"../components/Flashcard\";\nimport Footer from \"../components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Questions() {\n  _s();\n\n  const [respondidas, setRespondidas] = React.useState(0);\n  const [icones, setIcones] = React.useState([]);\n  const [qtdLembrou, setQtdLembrou] = React.useState(0);\n  const questionsData = [{\n    question: \"O que é JSX?\",\n    awnser: \"Uma extensão de linguagem do JavaScript\"\n  }, {\n    question: \"O React é __\",\n    awnser: \"uma biblioteca JavaScript para construção de interfaces\"\n  }, {\n    question: \"Componentes devem iniciar com ___\",\n    answer: \"letra maiúscula\"\n  }, {\n    question: \"Podemos colocar __ dentro do JSX \",\n    answer: \"expressões\"\n  }, {\n    question: \"O ReactDOM nos ajuda __\",\n    answer: \"interagindo com a DOM para colocar componentes React na mesma\"\n  }, {\n    question: \"Usamos o npm para __ \",\n    answer: \"gerenciar os pacotes necessários e suas dependências\"\n  }, {\n    question: \"Usamos props para __\",\n    answer: \"passar diferentes informações para componentes\"\n  }, {\n    question: \"Usamos estado (state) para __\",\n    answer: \"dizer para o React quais informações quando atualizadas devem renderizar a tela novamente\"\n  }];\n  questionsData.sort(function randomize() {\n    return Math.random() - 0.5;\n  });\n  let questionsDataScreen = [];\n\n  for (let i = 0; questionsDataScreen.length <= 3; i++) {\n    questionsDataScreen.push(questionsData[i]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flashcards\",\n        children: questionsDataScreen.map((p, index) => /*#__PURE__*/_jsxDEV(Flashcard, {\n          dadosTexto: p,\n          indexPergunta: index + 1,\n          contaRespostas: setRespondidas,\n          qtdRespostas: respondidas,\n          mudarIcones: setIcones,\n          iconesAtuais: icones,\n          lembrouQtd: qtdLembrou,\n          setLembrouQtd: setQtdLembrou\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 61\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        qtdRespondidas: respondidas,\n        icones: icones,\n        questionsDataScreen: questionsDataScreen,\n        qtd: qtdLembrou\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Questions, \"Rry1741pJXPh1GeeTvS2WPoUSOU=\");\n\n_c = Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","Header","Flashcard","Footer","Questions","respondidas","setRespondidas","useState","icones","setIcones","qtdLembrou","setQtdLembrou","questionsData","question","awnser","answer","sort","randomize","Math","random","questionsDataScreen","i","length","push","map","p","index"],"sources":["/home/ruda/Documents/projeto_08_zaprecall/src/components/Questions.js"],"sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Flashcard from \"../components/Flashcard\";\nimport Footer from \"../components/Footer\";\n\nexport default function Questions() {\n    const [respondidas, setRespondidas] = React.useState(0);\n    const [icones, setIcones] = React.useState([]);\n    const [qtdLembrou, setQtdLembrou] = React.useState(0);\n    const questionsData = [\n        {\n            question: \"O que é JSX?\",\n            awnser: \"Uma extensão de linguagem do JavaScript\",\n        },\n        {\n            question: \"O React é __\",\n            awnser: \"uma biblioteca JavaScript para construção de interfaces\",\n        },\n        {\n            question: \"Componentes devem iniciar com ___\",\n            answer: \"letra maiúscula\",\n        },\n        {\n            question: \"Podemos colocar __ dentro do JSX \",\n            answer: \"expressões\",\n        },\n        {\n            question: \"O ReactDOM nos ajuda __\",\n            answer: \"interagindo com a DOM para colocar componentes React na mesma\",\n        },\n        {\n            question: \"Usamos o npm para __ \",\n            answer: \"gerenciar os pacotes necessários e suas dependências\",\n        },\n        {\n            question: \"Usamos props para __\",\n            answer: \"passar diferentes informações para componentes\",\n        },\n        {\n            question: \"Usamos estado (state) para __\",\n            answer: \"dizer para o React quais informações quando atualizadas devem renderizar a tela novamente\",\n        },\n    ];\n\n    questionsData.sort(function randomize() {\n        return Math.random() - 0.5;\n    });\n\n    let questionsDataScreen = [];\n\n    for (let i = 0; questionsDataScreen.length <= 3; i++) {\n        questionsDataScreen.push(questionsData[i]);\n    }\n\n    \n    return (\n        <>\n            <div className=\"deck\">\n                <Header />\n                <div className=\"flashcards\">\n                    {questionsDataScreen.map((p, index) => (<Flashcard\n                        dadosTexto={p}\n                        indexPergunta={index + 1}\n                        contaRespostas={setRespondidas}\n                        qtdRespostas={respondidas}\n                        mudarIcones={setIcones}\n                        iconesAtuais={icones}\n                        lembrouQtd={qtdLembrou}\n                        setLembrouQtd={setQtdLembrou}\n                    />\n                    ))}\n                </div>\n                <Footer qtdRespondidas={respondidas} icones={icones} questionsDataScreen={questionsDataScreen} qtd={qtdLembrou} />\n            </div>\n        </>\n    );\n}\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAChC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,KAAK,CAACO,QAAN,CAAe,CAAf,CAAtC;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,KAAK,CAACO,QAAN,CAAe,EAAf,CAA5B;EACA,MAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BX,KAAK,CAACO,QAAN,CAAe,CAAf,CAApC;EACA,MAAMK,aAAa,GAAG,CAClB;IACIC,QAAQ,EAAE,cADd;IAEIC,MAAM,EAAE;EAFZ,CADkB,EAKlB;IACID,QAAQ,EAAE,cADd;IAEIC,MAAM,EAAE;EAFZ,CALkB,EASlB;IACID,QAAQ,EAAE,mCADd;IAEIE,MAAM,EAAE;EAFZ,CATkB,EAalB;IACIF,QAAQ,EAAE,mCADd;IAEIE,MAAM,EAAE;EAFZ,CAbkB,EAiBlB;IACIF,QAAQ,EAAE,yBADd;IAEIE,MAAM,EAAE;EAFZ,CAjBkB,EAqBlB;IACIF,QAAQ,EAAE,uBADd;IAEIE,MAAM,EAAE;EAFZ,CArBkB,EAyBlB;IACIF,QAAQ,EAAE,sBADd;IAEIE,MAAM,EAAE;EAFZ,CAzBkB,EA6BlB;IACIF,QAAQ,EAAE,+BADd;IAEIE,MAAM,EAAE;EAFZ,CA7BkB,CAAtB;EAmCAH,aAAa,CAACI,IAAd,CAAmB,SAASC,SAAT,GAAqB;IACpC,OAAOC,IAAI,CAACC,MAAL,KAAgB,GAAvB;EACH,CAFD;EAIA,IAAIC,mBAAmB,GAAG,EAA1B;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBD,mBAAmB,CAACE,MAApB,IAA8B,CAA9C,EAAiDD,CAAC,EAAlD,EAAsD;IAClDD,mBAAmB,CAACG,IAApB,CAAyBX,aAAa,CAACS,CAAD,CAAtC;EACH;;EAGD,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAC,YAAf;QAAA,UACKD,mBAAmB,CAACI,GAApB,CAAwB,CAACC,CAAD,EAAIC,KAAJ,kBAAe,QAAC,SAAD;UACpC,UAAU,EAAED,CADwB;UAEpC,aAAa,EAAEC,KAAK,GAAG,CAFa;UAGpC,cAAc,EAAEpB,cAHoB;UAIpC,YAAY,EAAED,WAJsB;UAKpC,WAAW,EAAEI,SALuB;UAMpC,YAAY,EAAED,MANsB;UAOpC,UAAU,EAAEE,UAPwB;UAQpC,aAAa,EAAEC;QARqB;UAAA;UAAA;UAAA;QAAA,QAAvC;MADL;QAAA;QAAA;QAAA;MAAA,QAFJ,eAeI,QAAC,MAAD;QAAQ,cAAc,EAAEN,WAAxB;QAAqC,MAAM,EAAEG,MAA7C;QAAqD,mBAAmB,EAAEY,mBAA1E;QAA+F,GAAG,EAAEV;MAApG;QAAA;QAAA;QAAA;MAAA,QAfJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAqBH;;GAvEuBN,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}